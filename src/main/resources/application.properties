spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/proposta

spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name =com.mysql.cj.jdbc.Driver
spring.jpa.show-sql: true

periodicidade.executa-operacao=5000

## spring securiy resoruce server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}

## Incluindo Prometheus no projeto

management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
management.endpoint.health.show-details=always

#management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.include=health

management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
#opentracing.jaeger.service-name=${spring.application.name}
opentracing.jaeger.service-name=servico-de-proposta

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}